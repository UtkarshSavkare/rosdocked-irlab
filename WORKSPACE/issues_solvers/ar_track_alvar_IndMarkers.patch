--- IndividualMarkers.cpp	2021-04-30 07:47:13.565403838 +0000
+++ IndividualMarkers_new.cpp	2021-04-30 07:47:20.193310211 +0000
@@ -403,10 +403,13 @@
         double px = p.translation[0] / 100.0;
         double py = p.translation[1] / 100.0;
         double pz = p.translation[2] / 100.0;
-        double qx = p.quaternion[1];
-        double qy = p.quaternion[2];
-        double qz = p.quaternion[3];
-        double qw = p.quaternion[0];
+        cv::Mat quat =cv::Mat(4, 1, CV_64F);
+        p.GetQuaternion(quat);
+        double qx = quat.at<double>(1,0); //p.quaternion[1]; #leaving these comments for the record of what was not working properly in machinekoder's version
+        double qy = quat.at<double>(2,0); //p.quaternion[2];
+        double qz = quat.at<double>(3,0); //p.quaternion[3];
+        double qw = quat.at<double>(0,0); //p.quaternion[0];
+
 
         tf::Quaternion rotation(qx, qy, qz, qw);
         tf::Vector3 origin(px, py, pz);
@@ -495,11 +498,12 @@
       arPoseMarkers_.header.stamp = image_msg->header.stamp;
       arMarkerPub_.publish(arPoseMarkers_);
     }
-    catch (cv_bridge::Exception& e)
-    {
-      ROS_ERROR("Could not convert from '%s' to 'rgb8'.",
-                image_msg->encoding.c_str());
-    }
+  
+  catch (const std::exception& e)
+{
+  ROS_ERROR("Error in ar_track_alvar callback");
+}
+  
   }
 }
 
